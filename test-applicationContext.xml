<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd	
	">

	<bean id="connectionMaker"
		class="springbook.user.dao.DConnectionMaker"></bean>

	<bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />

	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost/testdb?serverTimezone=UTC&amp;useSSL=false&amp;allowPublicKeyRetrieval=true" />
		<!-- XML에선 &를 &amp; 로 바꿔줘야함 -->
		<property name="username" value="spring" />
		<property name="password" value="book" />
	</bean>

	<bean id="levelPolicy"
		class="springbook.user.service.CommonUserLevelUpgradePolicy" />

	<bean id="mailSender"
		class="springbook.user.service.DummyMailSender" />

	<!-- 트랜잭션 경계 설정 분리로 userService가 두개로 나눠짐 <bean id="userService" class="springbook.user.service.UserService"> 
		<property name="userDao" ref="userDao" /> <property name="dataSource" ref="dataSource" 
		/> <property name="levelPolicy" ref="levelPolicy" /> <property name="transactionManager" 
		ref="transactionManager" /> <property name="mailSender" ref="mailSender" 
		/> </bean> -->
	<!-- <bean id="userService" class="springbook.user.service.TxProxyFactoryBean"> 
		<property name="target" ref="userServiceImpl" /> <property name="transactionManager" 
		ref="transactionManager" /> <property name="pattern" value="upgradeLevels"></property> 
		<property name="serviceInterface" value="springbook.user.service.UserService" 
		/> </bean> -->

	<!-- <bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean"> 
		<property name="target" ref="userServiceImpl" /> <property name="interceptorNames"> 
		<list> <value>transactionAdvisor</value> </list> </property> </bean> -->
	<bean id="userService"
		class="springbook.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
		<property name="mailSender" ref="mailSender" />
		<!-- <property name="levelPolicy" ref="levelPolicy"/> -->
	</bean>

	<bean id="testUserService"
		class="springbook.user.service.UserServiceTest$TestUserServiceImpl"
		parent="userService" />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- <bean id="transactionAdvice" class="springbook.user.service.TransactionAdvice"> 
		<property name="transactionManager" ref="transactionManager" /> </bean> -->

	<!-- <bean id="transactionPointcut" class="springbook.user.service.NameMatchClassMethodPointcut"> -->
	<!-- class="org.springframework.aop.support.NameMatchMethodPointcut"> -->
	<!-- <property name="mappedClassName" value="*ServiceImpl"/> <property name="mappedName" 
		value="upgrade*" /> </bean> -->

	<!-- <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor"> 
		<property name="advice" ref="transactionAdvice" /> <property name="pointcut" 
		ref="transactionPointcut" /> </bean> <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" 
		/> -->

	<!-- <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
		<property name="host" value="mail.server.com" /> </bean> -->

	<aop:config>
		<aop:advisor advice-ref="transactionAdvice"
			pointcut="bean(*Service)" />
	</aop:config>

	<!-- <bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor"> 
		<property name="transationManager" ref="transactionManager" /> <property 
		name="transactionAttributes"> <props> <prop key="get*">PROPAGATION_REQUIRED, 
		readOnly</prop> <prop key="*">PROPAGATION_REQUIRED</prop> </props> </property> 
		</bean> -->
		
	<tx:advice id="transactionAdvice">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>


</beans>