<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="connectionMaker"
		class="springbook.user.dao.DConnectionMaker"></bean>
	<!-- CountingDaoFacotry와 DaoFactory의 connectionMaker 메서드 이름이 같아서 두개 구부을 
		못하는데? -->

	<bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />

	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost/testdb?serverTimezone=UTC&amp;useSSL=false&amp;allowPublicKeyRetrieval=true" />
		<!-- XML에선 &를 &amp; 로 바꿔줘야함 -->
		<property name="username" value="spring" />
		<property name="password" value="book" />
	</bean>

	<bean id="levelPolicy"
		class="springbook.user.service.CommonUserLevelUpgradePolicy" />

	<bean id="mailSender"
		class="springbook.user.service.DummyMailSender" />

	<!-- 트랜잭션 경계 설정 분리로 userService가 두개로 나눠짐 <bean id="userService" class="springbook.user.service.UserService"> 
		<property name="userDao" ref="userDao" /> <property name="dataSource" ref="dataSource" 
		/> <property name="levelPolicy" ref="levelPolicy" /> <property name="transactionManager" 
		ref="transactionManager" /> <property name="mailSender" ref="mailSender" 
		/> </bean> -->
	<bean id="userService"
		class="springbook.user.service.UserServiceTx">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="userService" ref="userServiceImpl"/>
	</bean>
	
	<bean id="userServiceImpl" class="springbook.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao"/>
		<property name="mailSender" ref="mailSender"/>
		<property name="levelPolicy" ref="levelPolicy"/>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
		<property name="host" value="mail.server.com" /> </bean> -->


</beans>